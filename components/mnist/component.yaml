name: ml-mnist
description: ml-mnist
inputs:
- {name: Webhdfs hosts, type: String, description='Webhdfs hosts'}
- {name: Training data input hdfs dir, type: String, description='hdfs input data dir'}
- {name: TF model dir, type: String, description='tf model dir'}
- {name: Model data output hdfs dir, type: String, description='hdfs output data dir'}
- {name: TF model type, type: String, description='CNN or LINEAR'}
- {name: Train steps, type: Integer, description='The number of training steps to perform'}
- {name: Train batch size, type: Integer, description='The number of batch size during training'}
- {name: Train learning rate, type: Float, description='Learning rate for training'}
outputs:
- {name: Model data output hdfs dir, type: String, description='hdfs output data dir'}
implementation:
  container:
    image: registry.cn-hangzhou.aliyuncs.com/mykf/ml-mnist
    command: [python, /model.py]
    args: [
      --webhdfs-hosts,    {inputValue: Webhdfs hosts},
      --tf-data-dir,      {inputValue: Training data input hdfs dir},
      --tf-model-dir,     {inputValue: TF model dir},
      --tf-export-dir,    {inputValue: Model data output hdfs dir},
      --tf-model-type,    {inputValue: TF model type},
      --tf-train-steps,   {inputValue: Train steps},
      --tf-batch-size,    {inputValue: Train batch size},
      --tf-learning-rate, {inputValue: Train learning rate}
    ]
    fileOutputs:
      Model data output hdfs dir: /tmp/model/mnist